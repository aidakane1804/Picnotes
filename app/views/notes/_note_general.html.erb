<% 
  picnotes_type = local_assigns.dig(:picnotes_type)
  folderid      = local_assigns.dig(:folderid)
%>
<div class="col-xs-12 col-sm-6 col-md-4 col-lg-4 notes_col">
  <%= link_to(note_path(note.slug, picnotes_type: picnotes_type, folderid: folderid), { remote: true, title: note.title }) do %>
    <figure class="card-picknote card-product image-containermyprofile">
      <div class="image-containermyprofile">
        <%= image_tag(note.image.url(:thumb), alt: note.title, :class => "image") if note.image.present? %>
          <div class="hover-overlay">
            <div class="overlay-content" id="folder-picnote" style="margin-bottom: -17%;">
            
              <p id="truncate-title" class="truncate">
               <%= note.title %> 
              </p>
              <p id="truncate-name" class="truncate" style="font-size: 12px;">
                <%= link_to "#{note.user.first_name} #{note.user.last_name}", user_path(note.user), style: 'color: inherit; text-decoration: none;' %>
              </p>
            </div>
            <div class="icons" style="display: flex; justify-content: flex-end;">
                 <span style="display: flex; gap: 4px;">
                <% if user_signed_in? %>
                  <% unless current_user.favorited_notes.exists?(id: note.id) %>
                    <span id='favorites-count-<%= note.id %>'>
                      <%= link_to fa_icon('heart'), favorite_notes_path(note_id: note), remote: true, class: 'grey_love love_iconss', method: :post, style: 'color: red !important;' %>
                    </span>
                  <% else %>
                    <span id='favorites-count-<%= note.id %>'>
                      <%= link_to fa_icon('heart'), favorite_note_path(note), remote: true, class: 'orange_love love_iconss', method: :delete %>
                    </span>
                  <% end %>
                  <span id='add-to-folder-<%= note.id %>' style="display: flex; justify-content: center; align-items: center;  margin-left: 5%;">
                    <%= link_to "/notes/add_note_to_folder?note_id=#{note.id}", remote: true, method: :get do %>
                      <%= image_tag 'folder-add.png', style: 'width: 38px; height: 35px; background-color: #BC171D; border-radius: 50%;  margin-bottom: 18%;' %>
                    <% end %>
                  </span>
                <% else %>
                  <span id='add-to-folder-<%= note.id %>'>
                    <%= link_to new_user_path do %>
                      <span id='favorites-count-<%= note.id %>'>
                        <%= link_to fa_icon('heart'), favorite_notes_path(note_id: note), remote: true, class: 'grey_love love_iconss', method: :post %>
                      </span>
                    <% end %>
                  </span>
                  <span id='add-to-folder-<%= note.id %>' style="display: flex; justify-content: center; align-items: center;  margin-left: 5%;">
                    <%= link_to "/notes/add_note_to_folder?note_id=#{note.id}", remote: true, method: :get do %>
                      <%= image_tag 'folder-add.png',style: 'width: 38px; height: 35px; background-color: #BC171D; border-radius: 50%; margin-bottom: 18%;' %>
                    <% end %>
                  </span>
                <% end %>
              </span>
            </div>
          </div>
        </div>
    </figure>
  <% end %>
</div>


<style>
  .profileDetails {
    width:71%;
    height: 100vh; 
    border: 1px solid #dcdcdc;
    box-shadow: 0px 4px 24px 0px #0000000d;
    border-radius: 10px;
    overflow: scroll;
 }
 
.grey_loves .fa {
  color: #BC171D !important;
  background-color: white !important;
  height: 37px !important;
  width: 40px !important;
  border-radius: 50% !important;
  font-size: 22px !important;
  padding: 7px !important;
  border: 2px solid grey !important;


}
.love_iconsss {
  font-size: 30px !important;
  color: #BC171D !important;
}
.custom-heart-icon {
  color: red;
  background-color: red;
  border: 2px solid red;
  border-radius: 50%;
  padding: 5px;
  font-size: 24px;
  width: 34px;
  height: 34px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.image-containermyprofile {
  position: relative;
  overflow: hidden;
}
.card-picknote {
  width: 330px;
  border: none;
  border-radius: 15px;
  padding: 8px;
  background-color: #fff;
  position: relative;
  height: 268px;
  margin-left: auto;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}
.image-containermyprofile img {
  width: 100%;
  height: 100%;
  transition: transform 0.3s ease;
}
.image-containermyprofile:hover img {
  transform: scale(1.1);
}
.image-containermyprofile:hover .hover-overlay {
  opacity: 1;
}
.background-overlay {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  height: 100%;
  width: 100%;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0) 90%);
  z-index: 1;
}
.hover-text {
  margin-bottom:0rem;
  margin-right: 12rem;
  font-size: 20px;
  color: white;
  font-weight: bold;
  z-index: 2;
  margin-top:0px !important;
  text-decoration: none;

}
.hover-overlay {
  position: absolute;
  top: 70%;
  left: 0;
  width: 100%;
  height: 30%;
  display: flex;
  flex-direction: column; /* Stack items vertically */
  justify-content: flex-end; /* Align items to the bottom */
  opacity: 0;
  transition: opacity 0.3s ease;
  padding: 1rem;
  box-sizing: border-box;
  z-index: 2;
}

.overlay-content {
  margin-bottom: -17%;
  display: flex;
  flex-direction: column; /* Stack title and name vertically */
  align-items: flex-start; /* Align items to the left */
  margin-bottom: 10px; /* Add spacing between elements */
}

.truncate {
  display: inline-block;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 20ch;
  color: white !important;
  font-weight: bold;
  font-size: 16px;
  text-decoration: none;
}

.icons {
  display: flex;
  gap: 10px;
  z-index: 3;
}

.icons span {
  position: relative;
  z-index: 3;
}

</style>

<script>
  function truncateText(id, maxLength) {
    var element = document.getElementById(id);
    /*
    if (element.textContent.length > maxLength) {
      element.textContent = element.textContent.slice(0, maxLength) + '...';
    }
    */
  }

  document.addEventListener("DOMContentLoaded", function() {
    truncateText('truncate-title', 10); // Adjust maxLength as needed
    truncateText('truncate-name', 10);  // Adjust maxLength as needed
  });
</script>
